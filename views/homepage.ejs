<!DOCTYPE html>
<html lang="en">

<head>
    <%- include('./partials/head.ejs') %>
        <title>Homepage Page</title>
        <script src="https://cdn.socket.io/4.7.2/socket.io.min.js"></script>
        <script src="https://code.jquery.com/jquery-3.7.0.min.js"  crossorigin="anonymous"></script>

        <style>
            body {
                width: 100vw;
                overflow: hidden;
            }


            li {
                list-style-type: none;
            }

            .main{
                display: flex;
            }

            .friendsList{
                margin-right: 1em;
                width: 15em;
                height: 100vh;
                background-color: #343a40;
            }

            ul{
                padding-left: 0;
            }

            .friendsList  li {
                color: #343a40;
                font-weight: bold;
                background-color: white;
                padding: 1em;      
                border-bottom: solid 1px #343a40;
                border-right: solid 1px #343a40;  
                cursor: pointer;   
                overflow-y: auto;  
            }

            .no-friends{
                width: 15em;
                height: 100vh;
                background-color: #343a40;
                color: white;
                font-weight: bold;
                display: flex;
                align-items: center;
                justify-content: center;
            }

            .row .col{
                height: 2.5em;
                position: absolute;
                bottom: 0;
            }

            .row .col input{
                width: 75vw;
            }

            h1{
                display: none;
            }

            .messages{
                width: 50vw;
            }            

            .current-user-chat{
                text-align: right;
                margin-right: 1em;
            }

            .chat-container{
                width: 100%;
                height: 400px;
                overflow: scroll;
            }

            .tap-to-start-chat{
                margin-top: 15em;
                margin-left: 20em;
            }

        </style>
</head>

<body>
    <%- include('./partials/nav.ejs') %>

        <!-- <div class="messages"></div> -->
        <section class="main">
            <% if (locals.friendsList) { %>
                <div class="friendsList">
                    <ul id="friendsList">
                        <% friendsList.forEach(friend => { %>
                            <li id="friend-<%= friend._id %>" data-id="<%=friend._id%>">
                                <%= friend.username %> 
                                <% if(friend.is_online == '1') { %>
                                    <span class="status">ðŸŸ¢</span>
                                <% } else { %>
                                    <span class="status"></span>
                                <% } %>
                            </li>
                        <% }) %>
                    </ul>
                </div>
            <%} else { %>
                <p class="no-friends">No Friends!</p>
            <% } %>

            <h1 class="user-id"><%= user.id %></h1>


            <div class="chat-section">
                <div class="chat-container">
                    <!-- <p>Hii</p>
                    <p class="current-user-chat">Hello</p> -->
                </div>

                <form action="" id="chat-form" method="post">
                    <input type="text" name="message" placeholder="Send Message" required id="message">
                    <button type="submit" value="Send Message">Send Button</button>
                </form>
            </div>

            <div class="tap-to-start-chat">
                <h3>Tap on a friend to start chat</h3>
            </div>

            <!-- <div class="row">
                <div class="col d-flex">
                    
                    <input type="text" class="form-control" placeholder="Send message" aria-label="First name">
                    <button class="btn btn-dark" type="submit">Send</button>
                </div>
            </div> -->
        </section>        

        <%- include('./partials/script.ejs') %>
            <script>
                let inp = document.querySelector('.form-control');
                let messages = document.querySelector('.messages');
                const userId = document.querySelector('.user-id').textContent;
                let chatForm = document.querySelector('#chat-form');
                let selectedFriendId = null;
                let socket = io({
                    auth: {
                        token: userId
                    }
                });


                // Elements for toggling
                const chatSection = document.querySelector('.chat-section');
                const tapToStartChat = document.querySelector('.tap-to-start-chat');

                function updateChatView() {
                    if (selectedFriendId === null) {
                        chatSection.style.display = 'none'; 
                        tapToStartChat.style.display = 'block';
                    } else {
                        chatSection.style.display = 'block'; 
                        tapToStartChat.style.display = 'none'; 
                    }

                }

                updateChatView();                


                socket.emit('user_connected', userId);
                
                const friendsList = document.getElementById('friendsList');

                friendsList.addEventListener('click', function(event) {
                    const clickedItem = event.target.closest('li'); 
                    if (clickedItem && clickedItem.hasAttribute('data-id')) {
                        selectedFriendId = clickedItem.getAttribute('data-id');
                        console.log('Selected Friend ID:', selectedFriendId);
                        updateChatView();

                        socket.emit('existingChat', { sender: userId, receiver: selectedFriendId })
                    }
                });

                //update user online
                socket.on('getOnlineUser', (data) => {
                    const userId = data.user_id;
                    const userElement = document.getElementById(`friend-${userId}`);

                    if(userElement){
                        const statusElement = userElement.querySelector('.status');
                        // Set the status to online (green circle)
                        statusElement.textContent = 'ðŸŸ¢';
                    }
                })

                //update user offline
                socket.on('getOfflineUser', (data) => {
                    const userId = data.user_id;
                    const userElement = document.getElementById(`friend-${userId}`);

                    if(userElement){
                        const statusElement = userElement.querySelector('.status');
                        // Set the status to online (green circle)
                        statusElement.textContent = '';
                    }
                })


                //chat save for user
                chatForm.addEventListener('submit', async function(){
                    event.preventDefault();

                    const msg = document.querySelector('#message').value;
                    console.log(userId + '\n' + selectedFriendId + '\n' + msg);

                    try{

                        $.ajax({
                            url: '/user/save-chat',
                            type: 'POST',
                            data: {
                                sender: userId,
                                receiver: selectedFriendId,
                                message: msg
                            },
                            success: function(resp){
                                if(resp.success){
                                    console.log(resp.chat.message);
                                    $('#message').val('');
                                    let chat = resp.chat.message;
                                    let html = `<p class="current-user-chat">`+chat+`</p>`
                                    $('.chat-container').append(html);
                                    socket.emit('newChat', resp.chat);
                                    scrollChat();
                                }
                            },
                            error: function(err){
                                console.log(err.responseText);
                                
                            }
                        })
                    }catch(err){
                        console.log(`this is the error`);
                        
                        console.log(err.message);
                    }
                })

                socket.on('loadNewChat', (data) => {
                    if(data.receiver === userId && data.sender === selectedFriendId){
                        let html = `<p class="distance-user-chat">`+data.message+`</p>`;
                        $('.chat-container').append(html);
                        scrollChat();
                    }
                })

                //load old chats
                socket.on('loadChats', (data) => {
                    $('.chat-container').html('');
                    let chats = data.chats;

                    let html = '';

                    for(let chat of chats){
                        if(chat.sender === userId){
                            html = `<p class='current-user-chat'>`+chat.message+`</p>`
                        }else{
                            html = `<p class='distance-user-chat'>`+chat.message+`</p>`
                        }

                        $('.chat-container').append(html);
                        scrollChat();
                    }
                })

                //auto scroll chat
                function scrollChat(){
                    $('.chat-container').animate({
                        scrollTop: $('.chat-container').offset().top + $('.chat-container')[0].scrollHeight
                    }, 0)
                }

            </script>
</body>

</html>